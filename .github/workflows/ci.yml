name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - converted_to_draft

concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  eslint:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Code
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: true
      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Run Eslint
        run: pnpm run lint

  prettier:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Code
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: true
      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Run Prettier
        run: pnpm exec prettier --check .

  playwright:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [prettier, eslint]
    steps:
      - uses: actions/checkout@v3
        name: Checkout Code
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: true
      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
      - name: Run Playwright tests
        run: pnpm exec playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 2

  vercel-preview:
    if: github.event_name == 'pull_request'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [prettier, eslint, playwright]
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout Code
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: echo url="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Deployment URL
      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_OUTPUT
      - name: Render template
        id: template
        uses: chuhlomin/render-template@v1.4
        with:
          template: .github/comment-template.md
          vars: |
            author: ${{ github.actor }}
            url: ${{ steps.deploy.outputs.url }}
            time: ${{ steps.fc.outputs.NOW }}
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.template.outputs.result }}
          edit-mode: replace
          token: ${{ secrets.GH_PAT }}

  vercel-production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [prettier, eslint, playwright]
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout Code
      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version: 18
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
